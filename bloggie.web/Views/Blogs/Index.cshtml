@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManger
@inject UserManager<IdentityUser> usermanager
@model bloggie.web.Models.ViewModels.BlogDetailsViewModels
@{
    ViewData["Title"] = Model.PageTitle;
}




<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>
                <div class="mb-3 d-flex justify-content-between">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>


                <div class="me-3">
                    @if (signInManger.IsSignedIn(User))
                    {
                        if (Model.Liked)
                        {
                            <a style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                            </a>
                        }

                    }
                    <span id="TotalLikes">@Model.TotalLikes</span>
                    Likes
                </div>


                <div class="d-flex mb-3">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge me-1 bg-secondary">@tag.Name</span>
                    }
                </div>

                <img src="@Model.FeaturedImageUrl" class="mb-3 img-fluid d-block" />

                <div class="mb-3 blog-detail-content">
                    @Html.Raw(Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comment</h5>
                        @if (signInManger.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input class="form-control" type="text" asp-for="CommentDescription" />
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Submit</button>
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" asp-for="UrlHandle" />
                                </div>
                            </form>
                        }
                        <div class="card-body">
                            @if (Model.Comments != null && Model.Comments.Any())
                            {
                                foreach (var comment in Model.Comments)
                                {
                                    <div class="card mb-3">
                                        <div class="card-body">
                                            <div>
                                                @comment.Description
                                            </div>
                                            <div class="d-flex justify-content-between">
                                                <span class="text-secondary">@comment.Username</span>
                                                <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                            </div>
                                        </div>
                                    </div>
                                }

                            }
                        </div>
                    </div>
                </div>


            }
            else
            {
                <p> No Blog Found!</p>
            }
        </div>
    </div>
</div>



@section scripts {
    <script>
        const btnLikeElement = document.getElementById('btnLike');
        const totalLikesElement = document.getElementById('TotalLikes')

        async function getTotalLikes() {
            fetch('/api/blogpostlike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            }).then(data => data.json())
                .then(result => totalLikesElement.innerHTML = result);
        }



        async function AddLikeForBlog() {
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@usermanager.GetUserId(User)'
                })
            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', AddLikeForBlog);
                getTotalLikes();
            });
        }

        btnLikeElement.addEventListener('click', AddLikeForBlog);

    </script>
}